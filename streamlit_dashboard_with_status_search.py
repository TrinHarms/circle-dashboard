
import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Circle Condo Dashboard", layout="wide")

st.title("üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß")
st.markdown("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏° Google Sheets + ‡πÅ‡∏ú‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°")

sheet_id = "1Chr7GsJxl99sK9-9vW0ZM-t6xbphTLiUYn36v_HpHPI"
sheet_url = f"https://docs.google.com/spreadsheets/d/{sheet_id}/export?format=csv"

st.markdown("## üîó ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheet")
try:
    df = pd.read_csv(sheet_url, nrows=1)
    st.success("‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheet ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
except Exception as e:
    st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheet ‡πÑ‡∏î‡πâ: {e}")
    st.stop()

df = pd.read_csv(sheet_url)
room_col = [col for col in df.columns if "Room No" in col][0]
damage_col = [col for col in df.columns if "‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢" in col][0]
image_col = [col for col in df.columns if "‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û" in col or "Picture" in col][-1]

df_filtered = df[[room_col, damage_col, image_col]].dropna(subset=[room_col, damage_col])
df_filtered['Damage Types'] = df_filtered[damage_col].str.split(',')
df_filtered = df_filtered.explode('Damage Types')
df_filtered['Damage Types'] = df_filtered['Damage Types'].str.strip()

freq = df_filtered['Damage Types'].value_counts().reset_index()
freq.columns = ['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö']

room_group = df_filtered.groupby(room_col)['Damage Types'].count().reset_index()
room_group.columns = ['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢']
room_top = room_group.sort_values(by='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢', ascending=False).head(10)

tab1, tab2, tab3 = st.tabs([
    "üìã ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°", 
    "üìÜ ‡πÅ‡∏ú‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£", 
    "üìò ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
])

with tab1:
    st.markdown("### üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á")
    search_query = st.text_input("üîé ‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)")
    if search_query:
        df_filtered_display = df_filtered[df_filtered[room_col].astype(str).str.contains(search_query)]
    else:
        df_filtered_display = df_filtered.copy()

    damage_types = sorted(df_filtered_display['Damage Types'].dropna().unique())
    selected = st.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢", damage_types, default=damage_types)

    df_view = df_filtered_display[df_filtered_display['Damage Types'].isin(selected)]

    st.markdown("### üîé ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢")
    fig = px.bar(df_view['Damage Types'].value_counts().reset_index().rename(columns={'index': '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢', 'Damage Types': '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö'}),
                 x='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö', y='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢', orientation='h')
    st.plotly_chart(fig, use_container_width=True)

    st.markdown("### üè† ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
    top_rooms = df_view.groupby(room_col)['Damage Types'].count().reset_index().sort_values(by='Damage Types', ascending=False).head(10)
    top_rooms.columns = ['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢']
    st.dataframe(top_rooms, use_container_width=True)

    st.markdown("### üì∏ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö")
    def make_link(url):
        if pd.notnull(url) and str(url).startswith("http"):
            return f'<a href="{url}" target="_blank">‡∏î‡∏π‡∏†‡∏≤‡∏û</a>'
        return ''
    df_view['‡∏î‡∏π‡∏†‡∏≤‡∏û'] = df_view[image_col].apply(make_link)
    st.write(df_view[[room_col, 'Damage Types', '‡∏î‡∏π‡∏†‡∏≤‡∏û']].to_html(escape=False, index=False), unsafe_allow_html=True)

with tab2:
    st.markdown("### üóìÔ∏è ‡πÅ‡∏ú‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°")
    try:
        with open("meeting_plan_gantt_updated.html", "r", encoding="utf-8") as f:
            st.components.v1.html(f.read(), height=600, scrolling=True)
    except FileNotFoundError:
        st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Gantt Chart: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á 'meeting_plan_gantt_updated.html' ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô")

with tab3:
    st.markdown("## üßæ ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£ Deploy ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î Circle Condo")
    st.markdown("""
### üîß ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°

1. ‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å:
   - `streamlit_dashboard_google_full.py`
   - `meeting_plan_gantt_updated.html`
   - `requirements.txt`
2. Google Sheet ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏õ‡πá‡∏ô Viewer

---

### üöÄ ‡∏ß‡∏¥‡∏ò‡∏µ Deploy ‡∏ö‡∏ô Streamlit Cloud

1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà [https://streamlit.io/cloud](https://streamlit.io/cloud)
2. ‡∏Å‡∏î ‚ÄúDeploy an app‚Äù
3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å GitHub repo ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Main file: `streamlit_dashboard_google_full.py`
5. ‡∏Å‡∏î Deploy ‚úÖ ‡πÑ‡∏î‡πâ‡∏•‡∏¥‡∏á‡∏Å‡πå ‡πÄ‡∏ä‡πà‡∏ô:
   `https://circle-dashboard.streamlit.app`

---

### üí° ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á requirements.txt
```
streamlit
pandas
plotly
```

---

### üì¶ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö Offline
```bash
streamlit run streamlit_dashboard_google_full.py
```
*‡∏ï‡πâ‡∏≠‡∏á‡∏ß‡∏≤‡∏á `meeting_plan_gantt_updated.html` ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô*

---

### üìå ‡∏Ç‡πâ‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°

- ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Google Drive ‡∏´‡∏£‡∏∑‡∏≠ USB ‡∏™‡∏≥‡∏£‡∏≠‡∏á
- ‡πÅ‡∏ä‡∏£‡πå‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ú‡πà‡∏≤‡∏ô QR Code ‡∏´‡∏£‡∏∑‡∏≠ LINE OA
- ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏ô‡∏µ‡πâ Deploy ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
""")

